# -*- coding: utf-8 -*-
"""housing information.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sV7XDPlYT6B1V97BO_QYnnVLChvVUy5g
"""

import pandas as pd
houses=pd.read_csv('train.csv')
houses.columns

"""Data set is a set of housing data  information that contains charateristics of many house that can be considered before sales or renting

It contains data like:

sale price, sale condition , house style and neighbors

it help in the visualization and understading of some important variables that drives the sales of houses
"""

houses.head()

houses.info()

houses.describe()

# Commented out IPython magic to ensure Python compatibility.

import missingno as msno
# %matplotlib inline 
msno.matrix(houses)

total=houses.isnull().sum().sort_values(ascending=False)
percent=(total/houses.isnull().count()).sort_values(ascending=False)
missing_data=pd.concat([total,percent],axis=1,keys=['Total','percent'])
missing_data.head(20)

houses=houses.drop(houses.loc[houses['Electrical'].isnull()].index)
houses.isnull().sum().max()

import seaborn as sns
sns.distplot(houses['SalePrice'])

print ("skewness:",houses['SalePrice'].skew()) 
print ("kurtois:",houses['SalePrice'].kurt())

import numpy as np
logaritimically_transformed_houses=np.log(houses['SalePrice'])

sns.distplot(logaritimically_transformed_houses)

print ("skewness:",logaritimically_transformed_houses.skew()) 
print ("kurtois:",logaritimically_transformed_houses.kurt())

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline 
import matplotlib.pyplot as plt
corrmat=houses.corr()
f,ax=plt.subplots(figsize=(12,9))
sns.heatmap(corrmat,vmax=.8,square=True)

number_of_variables=10
selected_cols=corrmat.nlargest(number_of_variables,'SalePrice')['SalePrice'].index
correlation_coefficient=np.corrcoef(houses[selected_cols].values.T)
sns.heatmap(correlation_coefficient,vmax=.8,square=True,yticklabels=selected_cols.values,xticklabels=selected_cols.values,annot=True)